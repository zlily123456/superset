Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiHueScaleFactory = multiHueScaleFactory;
exports.singleHueScaleFactory = singleHueScaleFactory;

var _scale = require('@vx/scale');

var _color = require('@data-ui/theme/build/color');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /* eslint import/prefer-default-export: 0 */


// returns an ordinal scale of multi-hue colors with normalized/comparable brightness
function multiHueScaleFactory(brightness, hues) {
  return (0, _scale.scaleOrdinal)({ range: (0, _color.getPaletteForBrightness)(brightness, hues) });
}

// returns an ordinal scale of single-hue colors with varying brightness (dark to light)
// if no hue is specified or is invalid, returns grays
function singleHueScaleFactory(hue) {
  return (0, _scale.scaleOrdinal)({ range: [].concat(_toConsumableArray(_color.allColors[hue] || _color.grayColors)).reverse() });
}