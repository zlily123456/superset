'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactSelect = require('react-select');

var _reactSelect2 = _interopRequireDefault(_reactSelect);

var _IconChevronDown = require('./icons/IconChevronDown');

var _IconChevronDown2 = _interopRequireDefault(_IconChevronDown);

var _IconX = require('./icons/IconX');

var _IconX2 = _interopRequireDefault(_IconX);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var valueShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]);

var propTypes = {
  arrowRenderer: _propTypes2.default.func,
  autoSize: _propTypes2.default.bool,
  clearable: _propTypes2.default.bool,
  clearRenderer: _propTypes2.default.func,
  optionRenderer: _propTypes2.default.func,
  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string,
    value: valueShape.isRequired,
    disabled: _propTypes2.default.bool
  })),
  valueRenderer: _propTypes2.default.func,
  value: valueShape,
  onChange: _propTypes2.default.func,
  className: _propTypes2.default.string
};

var defaultProps = {
  arrowRenderer: function arrowRenderer() {
    return _react2.default.createElement(_IconChevronDown2.default, { size: 18, style: { marginTop: 10 } });
  },
  autoSize: false,
  clearable: false,
  clearRenderer: function clearRenderer() {
    return _react2.default.createElement(_IconX2.default, { size: 12, style: { marginTop: 5 } });
  },
  optionRenderer: undefined,
  options: [],
  value: null,
  valueRenderer: undefined,
  onChange: function onChange() {},
  className: undefined
};

function Select(_ref) {
  var arrowRenderer = _ref.arrowRenderer,
      autoSize = _ref.autoSize,
      clearable = _ref.clearable,
      clearRenderer = _ref.clearRenderer,
      optionRenderer = _ref.optionRenderer,
      options = _ref.options,
      className = _ref.className,
      onChange = _ref.onChange,
      value = _ref.value,
      valueRenderer = _ref.valueRenderer;

  return _react2.default.createElement(_reactSelect2.default, {
    arrowRenderer: arrowRenderer,
    autoSize: autoSize,
    clearable: clearable,
    clearRenderer: clearRenderer,
    optionRenderer: optionRenderer,
    options: options,
    onChange: onChange,
    value: value,
    valueRenderer: valueRenderer,
    className: className
  });
}

Select.propTypes = propTypes;
Select.defaultProps = defaultProps;

exports.default = Select;